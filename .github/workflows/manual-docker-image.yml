name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options:
          - monalisa
          - cschleiden
      message:
        required: true
      use-emoji:
        type: boolean
        description: Include ðŸŽ‰ðŸ¤£ emojis
      environment:
        type: environment

env:
  AWS_REGION: ${{secrets.AWS_REGION}}
  ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}
  ECR_REGISTRY: ${{secrets.ECR_REGISTRY}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
permissions:
  contents: read

jobs:
  manual-docker-image-ci:
    name: Build container image
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Send greeting
        run: echo "${{ github.event.inputs.message }} ${{ fromJSON('["", "ðŸ¥³"]')[github.event.inputs.use-emoji == 'true'] }} ${{ github.event.inputs.name }}"

      - name: Output env variables
        run: |
          echo "ECR_REGISTRY=${{ env.ECR_REGISTRY }}"
          echo "ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}"
          echo "AWS_REGION=${{ env.AWS_REGION }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

